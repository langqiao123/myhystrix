1.hystrix说明：
1.服务雪崩效应：是一种因服务提供者的不可用导致服务调用者的不可用,并将不可用逐渐放大的过程。
1) A为服务提供者, B为A的服务调用者, C和D是B的服务调用者. 当A的不可用,引起B的不可用,并将不可用逐渐放大C和D时, 服务雪崩就形成了


2.雪崩原因：
1).服务提供者不可用
	a.硬件故障(硬件损坏造成服务器主机宕机，网络硬件故障造成的服务器提供者的不可访问)
	b.程序bug
	c.缓存击穿:缓存应用重启，所以缓存被清空时，以及短时间内大量缓存失效时，大量的缓存不命中，使请求直击后端，造成服务提供者超负荷运行，引起服务不可用
	d.用户大量请求：在秒杀和大促开始前,如果准备不充分,用户发起大量请求造成服务提供者的不可用

2).重试加大流量
	a.用户重试：用户由于忍受不了界面长时间等待，而不断刷新页面甚至提交表单
	b.代码逻辑重试：服务调用端的会存在大量服务异常后的重试逻辑。

3).服务调用者不可用
	a.同步等待造成的资源耗尽：使用 同步调用 时,
	会产生大量的等待线程占用系统资源. 一旦线程资源被耗尽,服务调用者提供的服务也将处于不可用状态, 造成服务雪崩效应产生
 
 
3.雪崩的应对策略
1).限流，流量控制
	a.网关限流
	因为Nginx的高性能, 目前一线互联网公司大量采用Nginx+Lua的网关进行流量控制, 由此而来的OpenResty也越来越热门.

	b.用户交互限流
	具体措施:
		(1).采用加载动画,提高用户的忍耐等待时间.
		(2).提交按钮添加强制等待时间机制.
		(3).关闭重试
2).改进缓存模式
	a.缓存的预加载
	b.同步改为异步刷新
	
3) 服务自动扩容
	a.AWS的auto scaling
	
4) 服务调用者降级服务
	a.资源隔离：主要是对调用服务的线程池进行隔离.
	b.对依赖服务进行分类
	依赖服务分为: 强依赖和若依赖. 强依赖服务不可用会导致当前业务中止,而弱依赖服务的不可用不会导致当前业务的中止. 

	c.不可用服务的调用快速失败
	一般通过 超时机制, 熔断器 和熔断后的 降级方法 来实现